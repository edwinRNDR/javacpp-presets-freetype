// Targeted by JavaCPP version 1.5.2-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.freetype;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.freetype.global.freetype.*;



  /**************************************************************************
   *
   * \functype:
   *   FT_Stream_IoFunc
   *
   * \description:
   *   A function used to seek and read data from a given input stream.
   *
   * \input:
   *   stream ::
   *     A handle to the source stream.
   *
   *   offset ::
   *     The offset of read in stream (always from start).
   *
   *   buffer ::
   *     The address of the read buffer.
   *
   *   count ::
   *     The number of bytes to read from the stream.
   *
   * @return :
   *   The number of bytes effectively read by the stream.
   *
   * \note:
   *   This function might be called to perform a seek or skip operation with
   *   a {@code count} of~0.  A non-zero return value then indicates an error.
   *
   */
  @Properties(inherit = org.bytedeco.freetype.presets.freetype.class)
public class FT_Stream_IoFunc extends FunctionPointer {
      static { Loader.load(); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public    FT_Stream_IoFunc(Pointer p) { super(p); }
      protected FT_Stream_IoFunc() { allocate(); }
      private native void allocate();
      public native @Cast("unsigned long") long call( FT_Stream stream,
                         @Cast("unsigned long") long offset,
                         @Cast("unsigned char*") BytePointer buffer,
                         @Cast("unsigned long") long count );
  }
