// Targeted by JavaCPP version 1.5.2-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.freetype;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.freetype.global.freetype.*;



  /**************************************************************************
   *
   * \struct:
   *   FT_StreamDesc
   *
   * \description:
   *   A union type used to store either a long or a pointer.  This is used
   *   to store a file descriptor or a {@code FILE*} in an input stream.
   *
   */
  @Properties(inherit = org.bytedeco.freetype.presets.freetype.class)
public class FT_StreamDesc extends Pointer {
      static { Loader.load(); }
      /** Default native constructor. */
      public FT_StreamDesc() { super((Pointer)null); allocate(); }
      /** Native array allocator. Access with {@link Pointer#position(long)}. */
      public FT_StreamDesc(long size) { super((Pointer)null); allocateArray(size); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public FT_StreamDesc(Pointer p) { super(p); }
      private native void allocate();
      private native void allocateArray(long size);
      @Override public FT_StreamDesc position(long position) {
          return (FT_StreamDesc)super.position(position);
      }
  
    public native long value(); public native FT_StreamDesc value(long setter);
    public native Pointer pointer(); public native FT_StreamDesc pointer(Pointer setter);

  }
