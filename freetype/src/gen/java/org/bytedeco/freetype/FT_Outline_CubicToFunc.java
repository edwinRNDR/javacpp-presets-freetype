// Targeted by JavaCPP version 1.5.2-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.freetype;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.freetype.global.freetype.*;



  /**************************************************************************
   *
   * \functype:
   *   FT_Outline_CubicToFunc
   *
   * \description:
   *   A function pointer type used to describe the signature of a 'cubic to'
   *   function during outline walking or decomposition.
   *
   *   A 'cubic to' is emitted to indicate a third-order Bezier arc.
   *
   * \input:
   *   control1 ::
   *     A pointer to the first Bezier control point.
   *
   *   control2 ::
   *     A pointer to the second Bezier control point.
   *
   *   to ::
   *     A pointer to the target end point.
   *
   *   user ::
   *     A typeless pointer, which is passed from the caller of the
   *     decomposition function.
   *
   * @return :
   *   Error code.  0~means success.
   */
  @Properties(inherit = org.bytedeco.freetype.presets.freetype.class)
public class FT_Outline_CubicToFunc extends FunctionPointer {
      static { Loader.load(); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public    FT_Outline_CubicToFunc(Pointer p) { super(p); }
      protected FT_Outline_CubicToFunc() { allocate(); }
      private native void allocate();
      public native int call( @Const FT_Vector control1,
                               @Const FT_Vector control2,
                               @Const FT_Vector to,
                               Pointer user );
  }
