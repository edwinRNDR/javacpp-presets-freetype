// Targeted by JavaCPP version 1.5.2-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.freetype;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.freetype.global.freetype.*;



  /**************************************************************************
   *
   * \functype:
   *   FT_Realloc_Func
   *
   * \description:
   *   A function used to re-allocate a given block of memory.
   *
   * \input:
   *   memory ::
   *     A handle to the source memory manager.
   *
   *   cur_size ::
   *     The block's current size in bytes.
   *
   *   new_size ::
   *     The block's requested new size.
   *
   *   block ::
   *     The block's current address.
   *
   * @return :
   *   New block address.  0~in case of memory shortage.
   *
   * \note:
   *   In case of error, the old block must still be available.
   *
   */
  @Properties(inherit = org.bytedeco.freetype.presets.freetype.class)
public class FT_Realloc_Func extends FunctionPointer {
      static { Loader.load(); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public    FT_Realloc_Func(Pointer p) { super(p); }
      protected FT_Realloc_Func() { allocate(); }
      private native void allocate();
      public native Pointer call( FT_Memory memory,
                        @Cast("unsigned int") int cur_size,
                        @Cast("unsigned int") int new_size,
                        Pointer block );
  }
