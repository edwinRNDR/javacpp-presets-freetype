// Targeted by JavaCPP version 1.5.2-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.freetype;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.freetype.global.freetype.*;



  /**************************************************************************
   *
   * \struct:
   *   FT_SizeRec
   *
   * \description:
   *   FreeType root size class structure.  A size object models a face
   *   object at a given size.
   *
   * \fields:
   *   face ::
   *     Handle to the parent face object.
   *
   *   generic ::
   *     A typeless pointer, unused by the FreeType library or any of its
   *     drivers.  It can be used by client applications to link their own
   *     data to each size object.
   *
   *   metrics ::
   *     Metrics for this size object.  This field is read-only.
   */
  @Properties(inherit = org.bytedeco.freetype.presets.freetype.class)
public class FT_SizeRec extends Pointer {
      static { Loader.load(); }
      /** Default native constructor. */
      public FT_SizeRec() { super((Pointer)null); allocate(); }
      /** Native array allocator. Access with {@link Pointer#position(long)}. */
      public FT_SizeRec(long size) { super((Pointer)null); allocateArray(size); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public FT_SizeRec(Pointer p) { super(p); }
      private native void allocate();
      private native void allocateArray(long size);
      @Override public FT_SizeRec position(long position) {
          return (FT_SizeRec)super.position(position);
      }
  
    public native FT_Face face(); public native FT_SizeRec face(FT_Face setter);      /* parent face object              */
    public native @ByRef FT_Generic generic(); public native FT_SizeRec generic(FT_Generic setter);   /* generic pointer for client uses */
    public native @ByRef FT_Size_Metrics metrics(); public native FT_SizeRec metrics(FT_Size_Metrics setter);   /* size metrics                    */
    public native FT_Size_Internal internal(); public native FT_SizeRec internal(FT_Size_Internal setter);

  }
