// Targeted by JavaCPP version 1.5.2: DO NOT EDIT THIS FILE

package org.bytedeco.tensorrt.global;

import org.bytedeco.tensorrt.nvonnxparser_runtime.*;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;
import org.bytedeco.tensorrt.nvinfer.*;
import static org.bytedeco.tensorrt.global.nvinfer.*;
import org.bytedeco.tensorrt.nvinfer_plugin.*;
import static org.bytedeco.tensorrt.global.nvinfer_plugin.*;
import org.bytedeco.tensorrt.nvonnxparser.*;
import static org.bytedeco.tensorrt.global.nvonnxparser.*;

public class nvonnxparser_runtime extends org.bytedeco.tensorrt.presets.nvonnxparser_runtime {
    static { Loader.load(); }

// Parsed from NvOnnxParserRuntime.h

/*
 * Copyright (c) 2018, NVIDIA CORPORATION. All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

// #ifndef NV_ONNX_PARSER_RUNTIME_H
// #define NV_ONNX_PARSER_RUNTIME_H

// #include "NvOnnxParser.h"
// Targeting ../nvonnxparser_runtime/OnnxPluginFactory.java



 // namespace nvonnxparser

public static native Pointer createNvOnnxParserPluginFactory_INTERNAL(Pointer logger, int version);

// #ifdef SWIG
// #endif // SWIG

/** \brief Create a new plugin factory for deserializing engines built using
 *         the ONNX parser.
 *
 * This plugin factory handles deserialization of the plugins that are built
 * into the ONNX parser. Engines built using the ONNX parser must use this
 * plugin factory during deserialization.
 *
 * @param logger The logger to use
 *
 * @return a new plugin factory object or NULL if an error occurred
 * @see IPluginFactory
 */
@Namespace("nvonnxparser") public static native OnnxPluginFactory createPluginFactory(@ByRef ILogger logger);

 // namespace

 // namespace nvonnxparser

// #endif // NV_ONNX_PARSER_RUNTIME_H


}
