// Targeted by JavaCPP version 1.5.2-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.freetype;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.freetype.global.freetype.*;



  /**************************************************************************
   *
   * \struct:
   *   FT_Raster_Funcs
   *
   * \description:
   *  A structure used to describe a given raster class to the library.
   *
   * \fields:
   *   glyph_format ::
   *     The supported glyph format for this raster.
   *
   *   raster_new ::
   *     The raster constructor.
   *
   *   raster_reset ::
   *     Used to reset the render pool within the raster.
   *
   *   raster_render ::
   *     A function to render a glyph into a given bitmap.
   *
   *   raster_done ::
   *     The raster destructor.
   */
  @Properties(inherit = org.bytedeco.freetype.presets.freetype.class)
public class FT_Raster_Funcs extends Pointer {
      static { Loader.load(); }
      /** Default native constructor. */
      public FT_Raster_Funcs() { super((Pointer)null); allocate(); }
      /** Native array allocator. Access with {@link Pointer#position(long)}. */
      public FT_Raster_Funcs(long size) { super((Pointer)null); allocateArray(size); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public FT_Raster_Funcs(Pointer p) { super(p); }
      private native void allocate();
      private native void allocateArray(long size);
      @Override public FT_Raster_Funcs position(long position) {
          return (FT_Raster_Funcs)super.position(position);
      }
  
    public native @Cast("FT_Glyph_Format") int glyph_format(); public native FT_Raster_Funcs glyph_format(int setter);

    public native FT_Raster_NewFunc raster_new(); public native FT_Raster_Funcs raster_new(FT_Raster_NewFunc setter);
    public native FT_Raster_ResetFunc raster_reset(); public native FT_Raster_Funcs raster_reset(FT_Raster_ResetFunc setter);
    public native FT_Raster_SetModeFunc raster_set_mode(); public native FT_Raster_Funcs raster_set_mode(FT_Raster_SetModeFunc setter);
    public native FT_Raster_RenderFunc raster_render(); public native FT_Raster_Funcs raster_render(FT_Raster_RenderFunc setter);
    public native FT_Raster_DoneFunc raster_done(); public native FT_Raster_Funcs raster_done(FT_Raster_DoneFunc setter);

  }
