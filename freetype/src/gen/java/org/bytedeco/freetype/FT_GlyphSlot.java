// Targeted by JavaCPP version 1.5.2-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.freetype;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.freetype.global.freetype.*;



  /**************************************************************************
   *
   * \type:
   *   FT_GlyphSlot
   *
   * \description:
   *   A handle to a given 'glyph slot'.  A slot is a container that can hold
   *   any of the glyphs contained in its parent face.
   *
   *   In other words, each time you call \FT_Load_Glyph or \FT_Load_Char,
   *   the slot's content is erased by the new glyph data, i.e., the glyph's
   *   metrics, its image (bitmap or outline), and other control information.
   *
   * \also:
   *   See \FT_GlyphSlotRec for the publicly accessible glyph fields.
   */
  @Name("FT_GlyphSlotRec_") @Opaque @Properties(inherit = org.bytedeco.freetype.presets.freetype.class)
public class FT_GlyphSlot extends Pointer {
      /** Empty constructor. Calls {@code super((Pointer)null)}. */
      public FT_GlyphSlot() { super((Pointer)null); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public FT_GlyphSlot(Pointer p) { super(p); }
  }
