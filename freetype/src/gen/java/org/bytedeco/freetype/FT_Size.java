// Targeted by JavaCPP version 1.5.2-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.freetype;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.freetype.global.freetype.*;



  /**************************************************************************
   *
   * \type:
   *   FT_Size
   *
   * \description:
   *   A handle to an object that models a face scaled to a given character
   *   size.
   *
   * \note:
   *   An \FT_Face has one _active_ \FT_Size object that is used by functions
   *   like \FT_Load_Glyph to determine the scaling transformation that in
   *   turn is used to load and hint glyphs and metrics.
   *
   *   You can use \FT_Set_Char_Size, \FT_Set_Pixel_Sizes, \FT_Request_Size
   *   or even \FT_Select_Size to change the content (i.e., the scaling
   *   values) of the active \FT_Size.
   *
   *   You can use \FT_New_Size to create additional size objects for a given
   *   \FT_Face, but they won't be used by other functions until you activate
   *   it through \FT_Activate_Size.  Only one size can be activated at any
   *   given time per face.
   *
   * \also:
   *   See \FT_SizeRec for the publicly accessible fields of a given size
   *   object.
   */
  @Name("FT_SizeRec_") @Opaque @Properties(inherit = org.bytedeco.freetype.presets.freetype.class)
public class FT_Size extends Pointer {
      /** Empty constructor. Calls {@code super((Pointer)null)}. */
      public FT_Size() { super((Pointer)null); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public FT_Size(Pointer p) { super(p); }
  }
